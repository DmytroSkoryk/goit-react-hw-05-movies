{"version":3,"file":"static/js/186.8480c6ac.chunk.js","mappings":"qLAwCA,UArCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCH,EADnC,sDAGFI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAG,GACJR,EAAWQ,EAAKC,QACjB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAI,SAAUF,EACvB,GACJ,GAAE,CAACV,IAEY,OAAZF,EACK,KAGc,IAAnBA,EAAQe,QACH,qEAIP,wBACGf,EAAQgB,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GADC,KAQxB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=fd5362f1dc10a3ce9a04b5e02c85fcbb`\n    )\n      .then(res => res.json())\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(error => {\n        console.log('Error:', error);\n      });\n  }, [movieId]);\n\n  if (reviews === null) {\n    return null;\n  }\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie</p>;\n  }\n\n  return (\n    <ul>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <p>{review.author}</p>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetch","then","res","json","data","results","catch","error","console","log","length","map","review","author","content","id"],"sourceRoot":""}